{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x59aB084bb6FDC9a9aE4324e2a6F9C61d3693C90C",
    "txHash": "0xbb1c528d47a9b639ea3cc0377bf2221e3a821f46b00c691d3fd4e3af873cbb4c"
  },
  "proxies": [
    {
      "address": "0x569Af9F95c2cA272637fc46972985cFc89Ba5389",
      "txHash": "0x0a49d8aafbe52f778f86d124e797c485fc628692b2cb246e61ebc4262570fbb5",
      "kind": "transparent"
    },
    {
      "address": "0x1bDC64D9B5c9E286691c374e47c1949832D35AbF",
      "txHash": "0x27f602c5fe0caf2a7b0a0c154debe152e549e0b661d94edea4d70cdd9cd8b245",
      "kind": "transparent"
    },
    {
      "address": "0xEAD691D69B525eEEb03206891A40f7C7C5C8538F",
      "txHash": "0xddc684b078313a7dc92e4f5028476bd456b5299474436d58cbd9deb55d251d11",
      "kind": "transparent"
    },
    {
      "address": "0xDb80Fe2d03a89FA9e8F8575CEA5da8DB6b945e24",
      "txHash": "0x72efcaeca7c1f3dc3b046618c158b675b3f40411e8209ece2adb902e226a032e",
      "kind": "transparent"
    },
    {
      "address": "0xD045951e2B1cCcFeF3b1c1FcEffae77845Bbc581",
      "txHash": "0x8d3b7903ae94bb085a7b67b3d14d5839d3bbfe750b9db5f4574a990ca40b9839",
      "kind": "transparent"
    },
    {
      "address": "0xb4D0Ee5Aa559b838453Cc31Daa8b24DF37be751f",
      "txHash": "0x5aab53a1d0267fc1a3fe8c7d1634e276b2687fcaa96f2ed5e68b85df1f8e1eba",
      "kind": "transparent"
    },
    {
      "address": "0xf3342Efc237173917D2aCf57A3EBc2E814dB5Ec6",
      "txHash": "0xfda7a1876f42217d8b4964d604120d4f0a8f2652bc01f309ca402c7d000e0180",
      "kind": "transparent"
    },
    {
      "address": "0x50cB039005e5842Bd9c1EcE5a75D7D924574D64b",
      "txHash": "0x130ada8e7a0063f7970223a1189afb948530f24a20099b15e125f2c649c846e9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "7160e789bb6f692314ae753ebcc1689e6cb50c84e7803be40e227a6c5ec3c741": {
      "address": "0xf4E1Ab751e8f7687Fe65b6e33eEcAd7c0bA8C808",
      "txHash": "0xb00aa6367a3aa4cc14f35814f9ed3a5fdcebfd1e3664e2387dff83e85e6c5167",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VeERC20Upgradeable",
            "src": "contracts/furion-staking/VeERC20Upgradeable.sol:17"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VeERC20Upgradeable",
            "src": "contracts/furion-staking/VeERC20Upgradeable.sol:19"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "VeERC20Upgradeable",
            "src": "contracts/furion-staking/VeERC20Upgradeable.sol:21"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "VeERC20Upgradeable",
            "src": "contracts/furion-staking/VeERC20Upgradeable.sol:23"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "VeERC20Upgradeable",
            "src": "contracts/furion-staking/VeERC20Upgradeable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "VeERC20Upgradeable",
            "src": "contracts/furion-staking/VeERC20Upgradeable.sol:181"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_struct(UserInfo)5159_storage)",
            "contract": "VoteEscrowedFurion",
            "src": "contracts/furion-staking/VoteEscrowedFurion.sol:66"
          },
          {
            "label": "furion",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20)1530",
            "contract": "VoteEscrowedFurion",
            "src": "contracts/furion-staking/VoteEscrowedFurion.sol:69"
          },
          {
            "label": "maxCapRatio",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "VoteEscrowedFurion",
            "src": "contracts/furion-staking/VoteEscrowedFurion.sol:73"
          },
          {
            "label": "generationRate",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "VoteEscrowedFurion",
            "src": "contracts/furion-staking/VoteEscrowedFurion.sol:76"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VoteEscrowedFurion",
            "src": "contracts/furion-staking/VoteEscrowedFurion.sol:83"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VoteEscrowedFurion",
            "src": "contracts/furion-staking/VoteEscrowedFurion.sol:86"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1530": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)5159_storage)": {
            "label": "mapping(address => struct VoteEscrowedFurion.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)5159_storage": {
            "label": "struct VoteEscrowedFurion.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRelease",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountLocked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockUntil",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4babc694804a39e12e85533e0be1a64a7d0b82cfb9ccf2dd3fa5e8b92f7eb983": {
      "address": "0xD96c6bFeF85726657536AFB884Da81227469aBFc",
      "txHash": "0xd6d9c541f428d4b3adaefe49dae01c043e39284caa390e7905908e464490d887",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "furion",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IFurionToken)9172",
            "contract": "FarmingPoolUpgradeable",
            "src": "contracts/furion-farming/FarmingPoolUpgradeable.sol:50"
          },
          {
            "label": "_nextPoolId",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "FarmingPoolUpgradeable",
            "src": "contracts/furion-farming/FarmingPoolUpgradeable.sol:56"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "FarmingPoolUpgradeable",
            "src": "contracts/furion-farming/FarmingPoolUpgradeable.sol:59"
          },
          {
            "label": "poolList",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_struct(PoolInfo)3605_storage)dyn_storage",
            "contract": "FarmingPoolUpgradeable",
            "src": "contracts/furion-farming/FarmingPoolUpgradeable.sol:67"
          },
          {
            "label": "poolMapping",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FarmingPoolUpgradeable",
            "src": "contracts/furion-farming/FarmingPoolUpgradeable.sol:70"
          },
          {
            "label": "isFarming",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "FarmingPoolUpgradeable",
            "src": "contracts/furion-farming/FarmingPoolUpgradeable.sol:73"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3622_storage))",
            "contract": "FarmingPoolUpgradeable",
            "src": "contracts/furion-farming/FarmingPoolUpgradeable.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(PoolInfo)3605_storage)dyn_storage": {
            "label": "struct FarmingPoolUpgradeable.PoolInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IFurionToken)9172": {
            "label": "contract IFurionToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)3622_storage)": {
            "label": "mapping(address => struct FarmingPoolUpgradeable.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3622_storage))": {
            "label": "mapping(uint256 => mapping(address => struct FarmingPoolUpgradeable.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)3605_storage": {
            "label": "struct FarmingPoolUpgradeable.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "basicFurionPerSecond",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accFurionPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(UserInfo)3622_storage": {
            "label": "struct FarmingPoolUpgradeable.UserInfo",
            "members": [
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakingBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a1575368929f75e5e847511f617aaea4b467728a82f3c3a13f7875c9898da103": {
      "address": "0xf1f535c645342F204e96bB07333F262dED5E9fdc",
      "txHash": "0x5f34d1f7a2e7d98cea73eb6242edff6bef0c0b3af79cf83d033a04705ef60472",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "roundTime",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "IncomeSharingVault",
            "src": "contracts/income-sharing/IncomeSharingVault.sol:55"
          },
          {
            "label": "veFUR",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IVeFUR)6191",
            "contract": "IncomeSharingVault",
            "src": "contracts/income-sharing/IncomeSharingVault.sol:57"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_struct(PoolInfo)8174_storage)",
            "contract": "IncomeSharingVault",
            "src": "contracts/income-sharing/IncomeSharingVault.sol:69"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)8184_storage))",
            "contract": "IncomeSharingVault",
            "src": "contracts/income-sharing/IncomeSharingVault.sol:77"
          },
          {
            "label": "nextPool",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "IncomeSharingVault",
            "src": "contracts/income-sharing/IncomeSharingVault.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IVeFUR)6191": {
            "label": "contract IVeFUR",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)8184_storage)": {
            "label": "mapping(address => struct IncomeSharingVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)8184_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IncomeSharingVault.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PoolInfo)8174_storage)": {
            "label": "mapping(uint256 => struct IncomeSharingVault.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)8174_storage": {
            "label": "struct IncomeSharingVault.PoolInfo",
            "members": [
              {
                "label": "available",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardToken",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardPerSecond",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accRewardPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(UserInfo)8184_storage": {
            "label": "struct IncomeSharingVault.UserInfo",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4c283f4f6d496b419959ee1b239a7dc9c9f5208ea3f6dc0359d220e2aa9a962f": {
      "address": "0xf25CfC9e7fbFA594136F63769F21427071682e41",
      "txHash": "0xca1c1a171fcea0e0113507b51ce887123dff1c3c64e1f057bb761e46b251ca66",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IFurionSwapV2Router)7635",
            "contract": "IncomeMaker",
            "src": "contracts/income-sharing/IncomeMaker.sol:42"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IFurionSwapFactory)7365",
            "contract": "IncomeMaker",
            "src": "contracts/income-sharing/IncomeMaker.sol:44"
          },
          {
            "label": "incomeSharingVault",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "IncomeMaker",
            "src": "contracts/income-sharing/IncomeMaker.sol:46"
          },
          {
            "label": "incomeToken",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "IncomeMaker",
            "src": "contracts/income-sharing/IncomeMaker.sol:49"
          },
          {
            "label": "incomeProportion",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "IncomeMaker",
            "src": "contracts/income-sharing/IncomeMaker.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IFurionSwapFactory)7365": {
            "label": "contract IFurionSwapFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IFurionSwapV2Router)7635": {
            "label": "contract IFurionSwapV2Router",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "37c9241737661f18567170b360eabaf376fe04ec6143002221d0fa2588eebb85": {
      "address": "0x06AF97201D14162521625d7269d19C516B395880",
      "txHash": "0x30d2d03c739ce7c73bbb30378660493a2768cbeadc58c2b0d864feddbb3d0a06",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "admin",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:33"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:36"
          },
          {
            "label": "veToken",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)2292",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:38"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IPriceOracle)7353",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:41"
          },
          {
            "label": "closeFactorMantissa",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:43"
          },
          {
            "label": "marketsEntered",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:46"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(Market)5218_storage)",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:73"
          },
          {
            "label": "maxTier",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:76"
          },
          {
            "label": "pauseGuardian",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:84"
          },
          {
            "label": "_supplyGuardianPaused",
            "offset": 20,
            "slot": "8",
            "type": "t_bool",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:85"
          },
          {
            "label": "_borrowGuardianPaused",
            "offset": 21,
            "slot": "8",
            "type": "t_bool",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:86"
          },
          {
            "label": "transferGuardianPaused",
            "offset": 22,
            "slot": "8",
            "type": "t_bool",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:87"
          },
          {
            "label": "seizeGuardianPaused",
            "offset": 23,
            "slot": "8",
            "type": "t_bool",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:88"
          },
          {
            "label": "supplyGuardianPaused",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:89"
          },
          {
            "label": "borrowGuardianPaused",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:90"
          },
          {
            "label": "liquidatableTime",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:97"
          },
          {
            "label": "discountInterval",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:100"
          },
          {
            "label": "discountIncreaseMantissa",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "RiskManagerStorage",
            "src": "contracts/money-market/RiskManagerStorage.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)2292": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPriceOracle)7353": {
            "label": "contract IPriceOracle",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Market)5218_storage)": {
            "label": "mapping(address => struct RiskManagerStorage.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Market)5218_storage": {
            "label": "struct RiskManagerStorage.Market",
            "members": [
              {
                "label": "isListed",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorMantissa",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1edb8942d523aabcba808e0a4ebbff496f44711beec18b2e112ce00af9f5572a": {
      "address": "0x4170A2E0Ccc2b615Afc9E2122556d09B837C7b86",
      "txHash": "0xa3b1c5c520b323ce98afb27545cee1627154bcce89866b3bd3868c66d228e44d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(Counter)1382_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "154",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "riskManager",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IRiskManager)5612",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:15"
          },
          {
            "label": "interestRateModel",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IInterestRateModel)5393",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:17"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IPriceOracle)5406",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:19"
          },
          {
            "label": "checker",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(IChecker)2307",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:21"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:24"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "209",
            "type": "t_address",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:27"
          },
          {
            "label": "initialExchangeRateMantissa",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:36"
          },
          {
            "label": "reserveFactorMantissa",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:38"
          },
          {
            "label": "lastAccrualBlock",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:41"
          },
          {
            "label": "borrowIndex",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:44"
          },
          {
            "label": "totalCash",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:46"
          },
          {
            "label": "totalBorrows",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:48"
          },
          {
            "label": "totalReserves",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:50"
          },
          {
            "label": "accountBorrows",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_struct(BorrowSnapshot)5285_storage)",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:60"
          },
          {
            "label": "protocolSeizeShareMantissa",
            "offset": 0,
            "slot": "218",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:63"
          },
          {
            "label": "liquidationProtection",
            "offset": 0,
            "slot": "219",
            "type": "t_mapping(t_uint256,t_struct(LiquidationProtection)5301_storage)",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IChecker)2307": {
            "label": "contract IChecker",
            "numberOfBytes": "20"
          },
          "t_contract(IInterestRateModel)5393": {
            "label": "contract IInterestRateModel",
            "numberOfBytes": "20"
          },
          "t_contract(IPriceOracle)5406": {
            "label": "contract IPriceOracle",
            "numberOfBytes": "20"
          },
          "t_contract(IRiskManager)5612": {
            "label": "contract IRiskManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(BorrowSnapshot)5285_storage)": {
            "label": "mapping(address => struct TokenBaseStorage.BorrowSnapshot)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)1382_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LiquidationProtection)5301_storage)": {
            "label": "mapping(uint256 => struct TokenBaseStorage.LiquidationProtection)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BorrowSnapshot)5285_storage": {
            "label": "struct TokenBaseStorage.BorrowSnapshot",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interestIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)1382_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidationProtection)5301_storage": {
            "label": "struct TokenBaseStorage.LiquidationProtection",
            "members": [
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint128",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenSeized",
                "type": "t_uint128",
                "offset": 16,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a85f3c82b0859692c4673dfeb44bb104f168a9c4b605c526bcfada665c667c5d": {
      "address": "0xB4250e6D5a97e2fe8fBAD53b833CEBBfcf55A886",
      "txHash": "0x84748d5c2dc3c29fd9de6837bd39c040e5f3f7bd71566d7385c2f8245b5db299",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(Counter)1382_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "154",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "riskManager",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IRiskManager)5612",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:15"
          },
          {
            "label": "interestRateModel",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IInterestRateModel)5393",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:17"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IPriceOracle)5406",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:19"
          },
          {
            "label": "checker",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(IChecker)2307",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:21"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:24"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "209",
            "type": "t_address",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:27"
          },
          {
            "label": "initialExchangeRateMantissa",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:36"
          },
          {
            "label": "reserveFactorMantissa",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:38"
          },
          {
            "label": "lastAccrualBlock",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:41"
          },
          {
            "label": "borrowIndex",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:44"
          },
          {
            "label": "totalCash",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:46"
          },
          {
            "label": "totalBorrows",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:48"
          },
          {
            "label": "totalReserves",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:50"
          },
          {
            "label": "accountBorrows",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_struct(BorrowSnapshot)5285_storage)",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:60"
          },
          {
            "label": "protocolSeizeShareMantissa",
            "offset": 0,
            "slot": "218",
            "type": "t_uint256",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:63"
          },
          {
            "label": "liquidationProtection",
            "offset": 0,
            "slot": "219",
            "type": "t_mapping(t_uint256,t_struct(LiquidationProtection)5301_storage)",
            "contract": "TokenBaseStorage",
            "src": "contracts/money-market/TokenStorages.sol:73"
          },
          {
            "label": "underlying",
            "offset": 0,
            "slot": "220",
            "type": "t_address",
            "contract": "FErc20Storage",
            "src": "contracts/money-market/TokenStorages.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IChecker)2307": {
            "label": "contract IChecker",
            "numberOfBytes": "20"
          },
          "t_contract(IInterestRateModel)5393": {
            "label": "contract IInterestRateModel",
            "numberOfBytes": "20"
          },
          "t_contract(IPriceOracle)5406": {
            "label": "contract IPriceOracle",
            "numberOfBytes": "20"
          },
          "t_contract(IRiskManager)5612": {
            "label": "contract IRiskManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(BorrowSnapshot)5285_storage)": {
            "label": "mapping(address => struct TokenBaseStorage.BorrowSnapshot)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)1382_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LiquidationProtection)5301_storage)": {
            "label": "mapping(uint256 => struct TokenBaseStorage.LiquidationProtection)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BorrowSnapshot)5285_storage": {
            "label": "struct TokenBaseStorage.BorrowSnapshot",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interestIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)1382_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidationProtection)5301_storage": {
            "label": "struct TokenBaseStorage.LiquidationProtection",
            "members": [
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint128",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenSeized",
                "type": "t_uint128",
                "offset": 16,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
