/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../common";
import type { Checker, CheckerInterface } from "../../contracts/Checker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AP_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SP_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "isFurionToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_apFactory",
        type: "address",
      },
    ],
    name: "setAPFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spFactory",
        type: "address",
      },
    ],
    name: "setSPFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104418061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063745a3e6d1161007657806395422a5e1161005b57806395422a5e14610155578063d48bfca714610168578063f2fde38b1461017b57600080fd5b8063745a3e6d146101315780638da5cb5b1461014457600080fd5b80631e081e69146100a85780634354e0ec146100d857806362b6f42a14610114578063715018a614610127575b600080fd5b6001546100bb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101046100e6366004610404565b6001600160a01b031660009081526003602052604090205460ff1690565b60405190151581526020016100cf565b6002546100bb906001600160a01b031681565b61012f61018e565b005b61012f61013f366004610404565b6101a2565b6000546001600160a01b03166100bb565b61012f610163366004610404565b6101d9565b61012f610176366004610404565b610210565b61012f610189366004610404565b6102bd565b61019661034d565b6101a060006103a7565b565b6101aa61034d565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6101e161034d565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633148061023357506001546001600160a01b031633145b8061024857506002546001600160a01b031633145b6102995760405162461bcd60e51b815260206004820152601f60248201527f436865636b65723a204e6f74207065726d697474656420746f2063616c6c2e0060448201526064015b60405180910390fd5b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b6102c561034d565b6001600160a01b0381166103415760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610290565b61034a816103a7565b50565b6000546001600160a01b031633146101a05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610290565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561041657600080fd5b81356001600160a01b038116811461042d57600080fd5b939250505056fea164736f6c634300080d000a";

type CheckerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: CheckerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class Checker__factory extends ContractFactory {
  constructor(...args: CheckerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<Checker> {
    return super.deploy(overrides || {}) as Promise<Checker>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Checker {
    return super.attach(address) as Checker;
  }
  override connect(signer: Signer): Checker__factory {
    return super.connect(signer) as Checker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckerInterface {
    return new utils.Interface(_abi) as CheckerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Checker {
    return new Contract(address, _abi, signerOrProvider) as Checker;
  }
}
