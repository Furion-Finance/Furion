/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../../common";
import type { AggregatePool, AggregatePoolInterface } from "../../../contracts/aggregate-pool/AggregatePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fur",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "RegisteredToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "StakedToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "unstaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "UnstakedToken",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "circulatingSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "registerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newFur",
        type: "address",
      },
    ],
    name: "setFur",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newStakeFee",
        type: "uint256",
      },
    ],
    name: "setStakeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newUnstakeFee",
        type: "uint256",
      },
    ],
    name: "setUnstakeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenTypes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61016060405268056bc75e2d63100000600d5568056bc75e2d63100000600e553480156200002c57600080fd5b50604051620024cd380380620024cd8339810160408190526200004f91620003f0565b8180604051806040016040528060018152602001603160f81b81525084848160039080519060200190620000859291906200024f565b5080516200009b9060049060208401906200024f565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505033610140525050600780546001600160a01b038a81166001600160a01b031992831617909255600880548a841690831617905560098054898416908316179055600a80549288169290911691909117905550825160005b818110156200023d576001600b6000878481518110620001a857620001a862000544565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908315150217905550848181518110620001fc57620001fc62000544565b6020908102919091018101516000838152600c909252604090912080546001600160a01b0319166001600160a01b0390921691909117905560010162000184565b50600f55506200059695505050505050565b8280546200025d906200055a565b90600052602060002090601f016020900481019282620002815760008555620002cc565b82601f106200029c57805160ff1916838001178555620002cc565b82800160010185558215620002cc579182015b82811115620002cc578251825591602001919060010190620002af565b50620002da929150620002de565b5090565b5b80821115620002da5760008155600101620002df565b80516001600160a01b03811681146200030d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000353576200035362000312565b604052919050565b600082601f8301126200036d57600080fd5b81516001600160401b0381111562000389576200038962000312565b60206200039f601f8301601f1916820162000328565b8281528582848701011115620003b457600080fd5b60005b83811015620003d4578581018301518282018401528201620003b7565b83811115620003e65760008385840101525b5095945050505050565b600080600080600080600060e0888a0312156200040c57600080fd5b6200041788620002f5565b9650602062000428818a01620002f5565b96506200043860408a01620002f5565b95506200044860608a01620002f5565b60808a01519095506001600160401b03808211156200046657600080fd5b818b0191508b601f8301126200047b57600080fd5b81518181111562000490576200049062000312565b8060051b620004a185820162000328565b918252838101850191858101908f841115620004bc57600080fd5b948601945b83861015620004e557620004d586620002f5565b82529486019490860190620004c1565b60a08f01519099509550505050808311156200050057600080fd5b6200050e8c848d016200035b565b945060c08b01519250808311156200052557600080fd5b5050620005358a828b016200035b565b91505092959891949750929550565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200056f57607f821691505b6020821081036200059057634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161014051611ece620005ff600039600081816103ac015281816107b50152610a8101526000611331015260006113800152600061135b015260006112b4015260006112de015260006113080152611ece6000f3fe608060405234801561001057600080fd5b50600436106101c35760003560e01c80639358928b116100f9578063b2dd5c0711610097578063c45a015511610071578063c45a0155146103a7578063d505accf146103ce578063dd62ed3e146103e1578063e2d7bee41461041a57600080fd5b8063b2dd5c071461035e578063bb7907f114610381578063c2a672e01461039457600080fd5b8063a6f9dae1116100d3578063a6f9dae11461031c578063a9059cbb1461032f578063adc9772e14610342578063b2951e091461035557600080fd5b80639358928b146102f957806395d89b4114610301578063a457c2d71461030957600080fd5b8063313ce5671161016657806370a082311161014057806370a08231146102895780637ecebe00146102b25780638da5cb5b146102c55780638ea97d26146102f057600080fd5b8063313ce5671461025f5780633644e5151461026e578063395093511461027657600080fd5b806309824a80116101a257806309824a801461021e57806318160ddd14610231578063222c97771461024357806323b872dd1461024c57600080fd5b806218a116146101c857806306fdde03146101dd578063095ea7b3146101fb575b600080fd5b6101db6101d6366004611bc3565b61042d565b005b6101e561049f565b6040516101f29190611bdc565b60405180910390f35b61020e610209366004611c46565b610531565b60405190151581526020016101f2565b6101db61022c366004611c72565b610549565b6002545b6040519081526020016101f2565b610235600d5481565b61020e61025a366004611c8f565b610654565b604051601281526020016101f2565b610235610678565b61020e610284366004611c46565b610687565b610235610297366004611c72565b6001600160a01b031660009081526020819052604090205490565b6102356102c0366004611c72565b6106c6565b600a546102d8906001600160a01b031681565b6040516001600160a01b0390911681526020016101f2565b610235600e5481565b6102356106e6565b6101e56106f1565b61020e610317366004611c46565b610700565b6101db61032a366004611c72565b6107aa565b61020e61033d366004611c46565b61085f565b6101db610350366004611c46565b61086d565b610235600f5481565b61020e61036c366004611c72565b600b6020526000908152604090205460ff1681565b6101db61038f366004611c72565b610a76565b6101db6103a2366004611c46565b610b2b565b6102d87f000000000000000000000000000000000000000000000000000000000000000081565b6101db6103dc366004611cd0565b610d22565b6102356103ef366004611d47565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101db610428366004611bc3565b610e86565b600a546001600160a01b0316331461049a5760405162461bcd60e51b815260206004820152602560248201527f416767726567617465506f6f6c3a204e6f74207065726d697474656420746f2060448201526431b0b6361760d91b60648201526084015b60405180910390fd5b600e55565b6060600380546104ae90611d80565b80601f01602080910402602001604051908101604052809291908181526020018280546104da90611d80565b80156105275780601f106104fc57610100808354040283529160200191610527565b820191906000526020600020905b81548152906001019060200180831161050a57829003601f168201915b5050505050905090565b60003361053f818585610ef3565b5060019392505050565b600a546001600160a01b031633146105b15760405162461bcd60e51b815260206004820152602560248201527f416767726567617465506f6f6c3a204e6f74207065726d697474656420746f2060448201526431b0b6361760d91b6064820152608401610491565b6001600160a01b0381166000818152600b60209081526040808320805460ff19166001179055600f80548452600c9092528220805473ffffffffffffffffffffffffffffffffffffffff19169093179092558154919061061083611dca565b90915550506040516001600160a01b03821681527f5d0a1a502538b17810b0b5bb2ec57e41a9f0e4ff2c08490f11f1eef9b0ee9eb29060200160405180910390a150565b600033610662858285611018565b61066d8585856110aa565b506001949350505050565b60006106826112a7565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061053f90829086906106c1908790611de3565b610ef3565b6001600160a01b0381166000908152600560205260408120545b92915050565b600061068260025490565b6060600480546104ae90611d80565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561079d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610491565b61066d8286868403610ef3565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108305760405162461bcd60e51b815260206004820152602560248201527f416767726567617465506f6f6c3a204e6f74207065726d697474656420746f2060448201526431b0b6361760d91b6064820152608401610491565b600a805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60003361053f8185856110aa565b6001600160a01b0382166000908152600b6020526040902054829060ff1615156001146108f45760405162461bcd60e51b815260206004820152602f60248201527f416767726567617465506f6f6c3a20546f6b656e206e6f74206163636570746560448201526e321034b7103a3434b9903837b7b61760891b6064820152608401610491565b60006108ff846113ce565b9050600061090c8561154a565b905060008161091b8487611dfb565b6109259190611e1a565b600754600a54600d546040516323b872dd60e01b81523360048201526001600160a01b039283166024820152604481019190915292935016906323b872dd906064016020604051808303816000875af1158015610986573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109aa9190611e3c565b506040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b038716906323b872dd906064016020604051808303816000875af11580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a229190611e3c565b50610a2d338261158f565b60405185815233906001600160a01b038816907f572917b843dd6132f2ef4857991377e173c54cb472655bad280701adbd372dc4906020015b60405180910390a3505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610afc5760405162461bcd60e51b815260206004820152602560248201527f416767726567617465506f6f6c3a204e6f74207065726d697474656420746f2060448201526431b0b6361760d91b6064820152608401610491565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b0382166000908152600b6020526040902054829060ff161515600114610bb25760405162461bcd60e51b815260206004820152602f60248201527f416767726567617465506f6f6c3a20546f6b656e206e6f74206163636570746560448201526e321034b7103a3434b9903837b7b61760891b6064820152608401610491565b6000610bbd846113ce565b90506000610bca8561154a565b9050600082610bd98387611dfb565b610be39190611e1a565b600754600a54600e546040516323b872dd60e01b81523360048201526001600160a01b039283166024820152604481019190915292935016906323b872dd906064016020604051808303816000875af1158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190611e3c565b50610c73338661166e565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0387169063a9059cbb906044016020604051808303816000875af1158015610cc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce49190611e3c565b5060405181815233906001600160a01b038816907ff7fc830f89da6bb8e874b580b653a3fb2b6aa4aabcf2289983085a34f133b8b090602001610a66565b83421115610d725760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610491565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610da18c6117b4565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610dfc826117da565b90506000610e0c82878787611828565b9050896001600160a01b0316816001600160a01b031614610e6f5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610491565b610e7a8a8a8a610ef3565b50505050505050505050565b600a546001600160a01b03163314610eee5760405162461bcd60e51b815260206004820152602560248201527f416767726567617465506f6f6c3a204e6f74207065726d697474656420746f2060448201526431b0b6361760d91b6064820152608401610491565b600d55565b6001600160a01b038316610f555760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610491565b6001600160a01b038216610fb65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610491565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146110a457818110156110975760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610491565b6110a48484848403610ef3565b50505050565b6001600160a01b0383166111265760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610491565b6001600160a01b0382166111885760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610491565b6001600160a01b038316600090815260208190526040902054818110156112175760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610491565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061124e908490611de3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161129a91815260200190565b60405180910390a36110a4565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561130057507f000000000000000000000000000000000000000000000000000000000000000046145b1561132a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60095460405163438493ed60e01b81526001600160a01b038381166004830152600092839291169063438493ed90602401602060405180830381865afa15801561141c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114409190611e5e565b90506001600160a01b0381166114be5760405162461bcd60e51b815260206004820152603260248201527f416767726567617465506f6f6c3a20556e7265636f676e697a6564207365706160448201527f7261746520706f6f6c2070726f766964656400000000000000000000000000006064820152608401610491565b60085460405163bc24179360e01b81526001600160a01b03838116600483015260006024830181905292169063bc24179390604401602060405180830381865afa158015611510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115349190611e7b565b90506115426103e882611e1a565b949350505050565b6000806115556106e6565b90508060000361156e5750662386f26fc1000092915050565b8061157884611850565b6115829190611e1a565b9392505050565b50919050565b6001600160a01b0382166115e55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610491565b80600260008282546115f79190611de3565b90915550506001600160a01b03821660009081526020819052604081208054839290611624908490611de3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166116ce5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610491565b6001600160a01b038216600090815260208190526040902054818110156117425760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610491565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611771908490611e94565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161100b565b6001600160a01b0381166000908152600560205260409020805460018101825590611589565b60006106e06117e76112a7565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006118398787878761191d565b9150915061184681611a0a565b5095945050505050565b60008060005b600f54811015611916576000818152600c60205260408120546001600160a01b031690611882866113ce565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156118cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f09190611e7b565b90506118fc8183611dfb565b6119069086611de3565b9450836001019350505050611856565b5092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156119545750600090506003611a01565b8460ff16601b1415801561196c57508460ff16601c14155b1561197d5750600090506004611a01565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156119d1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119fa57600060019250925050611a01565b9150600090505b94509492505050565b6000816004811115611a1e57611a1e611eab565b03611a265750565b6001816004811115611a3a57611a3a611eab565b03611a875760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610491565b6002816004811115611a9b57611a9b611eab565b03611ae85760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610491565b6003816004811115611afc57611afc611eab565b03611b545760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610491565b6004816004811115611b6857611b68611eab565b03611bc05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610491565b50565b600060208284031215611bd557600080fd5b5035919050565b600060208083528351808285015260005b81811015611c0957858101830151858201604001528201611bed565b81811115611c1b576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611bc057600080fd5b60008060408385031215611c5957600080fd5b8235611c6481611c31565b946020939093013593505050565b600060208284031215611c8457600080fd5b813561158281611c31565b600080600060608486031215611ca457600080fd5b8335611caf81611c31565b92506020840135611cbf81611c31565b929592945050506040919091013590565b600080600080600080600060e0888a031215611ceb57600080fd5b8735611cf681611c31565b96506020880135611d0681611c31565b95506040880135945060608801359350608088013560ff81168114611d2a57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611d5a57600080fd5b8235611d6581611c31565b91506020830135611d7581611c31565b809150509250929050565b600181811c90821680611d9457607f821691505b60208210810361158957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611ddc57611ddc611db4565b5060010190565b60008219821115611df657611df6611db4565b500190565b6000816000190483118215151615611e1557611e15611db4565b500290565b600082611e3757634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611e4e57600080fd5b8151801515811461158257600080fd5b600060208284031215611e7057600080fd5b815161158281611c31565b600060208284031215611e8d57600080fd5b5051919050565b600082821015611ea657611ea6611db4565b500390565b634e487b7160e01b600052602160045260246000fdfea164736f6c634300080d000a";

type AggregatePoolConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: AggregatePoolConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class AggregatePool__factory extends ContractFactory {
  constructor(...args: AggregatePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _fur: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _spFactory: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _tokens: PromiseOrValue<string>[],
    _tokenName: PromiseOrValue<string>,
    _tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<AggregatePool> {
    return super.deploy(
      _fur,
      _oracle,
      _spFactory,
      _owner,
      _tokens,
      _tokenName,
      _tokenSymbol,
      overrides || {},
    ) as Promise<AggregatePool>;
  }
  override getDeployTransaction(
    _fur: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _spFactory: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _tokens: PromiseOrValue<string>[],
    _tokenName: PromiseOrValue<string>,
    _tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _fur,
      _oracle,
      _spFactory,
      _owner,
      _tokens,
      _tokenName,
      _tokenSymbol,
      overrides || {},
    );
  }
  override attach(address: string): AggregatePool {
    return super.attach(address) as AggregatePool;
  }
  override connect(signer: Signer): AggregatePool__factory {
    return super.connect(signer) as AggregatePool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AggregatePoolInterface {
    return new utils.Interface(_abi) as AggregatePoolInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AggregatePool {
    return new Contract(address, _abi, signerOrProvider) as AggregatePool;
  }
}
