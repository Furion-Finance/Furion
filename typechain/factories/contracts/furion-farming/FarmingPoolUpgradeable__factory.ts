/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../../common";
import type {
  FarmingPoolUpgradeable,
  FarmingPoolUpgradeableInterface,
} from "../../../contracts/furion-farming/FarmingPoolUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "FarmingPoolStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "FarmingPoolStopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "basicFurionPerSecond",
        type: "uint256",
      },
    ],
    name: "FurionRewardChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pendingReward",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "basicFurionPerSecond",
        type: "uint256",
      },
    ],
    name: "NewPoolAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accFurionPerShare",
        type: "uint256",
      },
    ],
    name: "PoolUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
    ],
    name: "StartTimestampChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "SCALE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_nextPoolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_basicFurionPerSecond",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "furion",
    outputs: [
      {
        internalType: "contract IFurionToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "basicFurionPerSecond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accFurionPerShare",
            type: "uint256",
          },
        ],
        internalType: "struct FarmingPoolUpgradeable.PoolInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_furion",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isFarming",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingFurion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolList",
    outputs: [
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "basicFurionPerSecond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accFurionPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_basicFurionPerSecond",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "setFurionReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_poolId",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_basicFurionPerSecond",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "setFurionRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
    ],
    name: "setStartTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506126f1806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063c44bef7511610097578063d41dcbea11610071578063d41dcbea14610461578063e6fd48bc14610476578063eced55261461047f578063f2fde38b1461048b57600080fd5b8063c44bef7514610402578063c4d66de814610415578063cdfb6cf31461042857600080fd5b80639c7a8293116100d35780639c7a8293146103a6578063a06ddcb3146103b9578063bcedbe2b146103dc578063c24c016e146103ef57600080fd5b80638da5cb5b14610327578063909ff8281461034c57806393f1a40b1461035f57600080fd5b8063441a3e7011610166578063630b5ba111610140578063630b5ba1146102fc578063715018a6146103045780637b0472f01461030c5780638456cb591461031f57600080fd5b8063441a3e70146102bf57806351eb05a6146102d25780635c975abb146102e557600080fd5b806318fccc76116101a257806318fccc76146102475780632a48235b1461025a5780632c678a3e146102975780633f4ba83a146102b757600080fd5b806306fdde03146101c95780630dec23121461021b57806317fb77de14610230575b600080fd5b6102056040518060400160405280601681526020017f467572696f6e204c50204661726d696e6720506f6f6c0000000000000000000081525081565b6040516102129190612353565b60405180910390f35b61022e6102293660046123b0565b61049e565b005b61023960ca5481565b604051908152602001610212565b61022e6102553660046123f0565b610711565b61026d61026836600461241c565b610917565b604080516001600160a01b0390951685526020850193909352918301526060820152608001610212565b6102396102a5366004612435565b60cd6020526000908152604090205481565b61022e61095b565b61022e6102cd366004612450565b61096d565b61022e6102e036600461241c565b610c2c565b60975460ff165b6040519015158152602001610212565b61022e610de1565b61022e610e25565b61022e61031a366004612450565b610e37565b61022e6110c0565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610212565b60c954610334906001600160a01b031681565b61039161036d3660046123f0565b60cf6020908152600092835260408084209091529082529020805460019091015482565b60408051928352602083019190915201610212565b61022e6103b43660046124be565b6110d0565b6102ec6103c736600461241c565b60ce6020526000908152604090205460ff1681565b6102396103ea3660046123f0565b611189565b61022e6103fd366004612542565b611381565b61022e61041036600461241c565b611570565b61022e610423366004612435565b61160d565b6102396104363660046123f0565b600091825260cf602090815260408084206001600160a01b0393909316845291905290206001015490565b6104696118a2565b6040516102129190612570565b61023960cb5481565b61023964e8d4a5100081565b61022e610499366004612435565b61192c565b826001600160a01b0381166104fa5760405162461bcd60e51b815260206004820152601a60248201527f4641524d494e475f504f4f4c3a205a45524f5f4144445245535300000000000060448201526064015b60405180910390fd5b6105026119bc565b61050a611a16565b61051384611a69565b156105605760405162461bcd60e51b815260206004820152601d60248201527f4641524d494e475f504f4f4c3a20414c52454144595f494e5f504f4f4c00000060448201526064016104f1565b811561056e5761056e610de1565b600060cb5442116105815760cb54610583565b425b604080516080810182526001600160a01b0388811682526020820188815292820184815260006060840181815260cc8054600181018255925293517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe6004909202918201805473ffffffffffffffffffffffffffffffffffffffff1916919094161790925592517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebf82015591517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ec0830155517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ec1909101559050831561069f5760ca54600090815260ce60205260409020805460ff191660011790555b60ca80549060006106af836125f3565b909155506001600160a01b038616600081815260cd60209081526040918290209390935580519182529181018690527f38bff197ec9fef6e32271789b78dca0f10af5b2b546ce690a67899f608ba4f4c91015b60405180910390a15050505050565b6002606554036107635760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f1565b6002606555610770611a16565b600082815260ce602052604090205460ff16156107905761079082610c2c565b600060cc83815481106107a5576107a561260c565b6000918252602080832060408051608081018252600490940290910180546001600160a01b03168452600180820154858501526002820154858401526003909101546060850190815288865260cf84528286203387529093529084208054925191810154939550939264e8d4a510009161081e91612622565b6108289190612641565b6108329190612663565b9050600081116108845760405162461bcd60e51b815260206004820152601f60248201527f4641524d494e475f504f4f4c3a204e4f5f50454e44494e475f5245574152440060448201526064016104f1565b64e8d4a510008360600151836001015461089e9190612622565b6108a89190612641565b825560006108b68583611a9a565b604080513381526001600160a01b0388166020820152908101889052606081018290529091507fdec9257d126f56798a34ce7ca0ffedeaa9a024543946f79c3b5038035ba32a1e906080015b60405180910390a15050600160655550505050565b60cc818154811061092757600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b6109636119bc565b61096b611ba3565b565b6002606554036109bf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f1565b60026065556109cc611a16565b60008111610a1c5760405162461bcd60e51b815260206004820152601b60248201527f4641524d494e475f504f4f4c3a2057495448445241575f5a45524f000000000060448201526064016104f1565b600060cc8381548110610a3157610a3161260c565b6000918252602080832086845260cf825260408085203386529092529220600181015460049092029092019250831115610ad35760405162461bcd60e51b815260206004820152602760248201527f4641524d494e475f504f4f4c3a204e4f5f454e4f5547485f5354414b494e475f60448201527f42414c414e43450000000000000000000000000000000000000000000000000060648201526084016104f1565b600084815260ce602052604090205460ff1615610af357610af384610c2c565b6000816000015464e8d4a5100084600301548460010154610b149190612622565b610b1e9190612641565b610b289190612663565b90506000610b363383611a9a565b60408051338082526020820152908101889052606081018290529091507fdec9257d126f56798a34ce7ca0ffedeaa9a024543946f79c3b5038035ba32a1e9060800160405180910390a18354600090610b9c906001906001600160a01b03163389611bf5565b905080846001016000828254610bb29190612663565b90915550506003850154600185015464e8d4a5100091610bd191612622565b610bdb9190612641565b845560408051338152602081018990529081018290527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060600160405180910390a1505060016065555050505050565b600060cc8281548110610c4157610c4161260c565b9060005260206000209060040201905080600201544211610c60575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ca8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccc919061267a565b905080600003610ce157504260029091015550565b6000826002015442610cf39190612663565b90506000836001015482610d079190612622565b905082610d1964e8d4a5100083612622565b610d239190612641565b846003016000828254610d369190612693565b909155505060c954604051632b2cea1960e21b8152306004820152602481018390526001600160a01b039091169063acb3a86490604401600060405180830381600087803b158015610d8757600080fd5b505af1158015610d9b573d6000803e3d6000fd5b5050426002870155505060038401546040805187815260208101929092527f7fa9647ec1cc14e3822b46d05a2b9d4e019bde8875c0088c46b6503d71bf17229101610702565b60cc5460005b81811015610e2157600081815260ce602052604090205460ff1615610e0f57610e0f81610c2c565b80610e19816125f3565b915050610de7565b5050565b610e2d6119bc565b61096b6000611d2e565b600260655403610e895760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f1565b6002606555610e96611a16565b600082815260ce6020526040902054829060ff16610ef65760405162461bcd60e51b815260206004820152601e60248201527f4641524d494e475f504f4f4c3a20504f4f4c5f4e4f545f4641524d494e47000060448201526064016104f1565b60008211610f465760405162461bcd60e51b815260206004820152601860248201527f4641524d494e475f504f4f4c3a205354414b455f5a45524f000000000000000060448201526064016104f1565b600060cc8481548110610f5b57610f5b61260c565b6000918252602080832087845260cf82526040808520338652909252922060049091029091019150610f8c85610c2c565b600181015415611026576000816000015464e8d4a5100084600301548460010154610fb79190612622565b610fc19190612641565b610fcb9190612663565b90506000610fd93383611a9a565b60408051338082526020820152908101899052606081018290529091507fdec9257d126f56798a34ce7ca0ffedeaa9a024543946f79c3b5038035ba32a1e9060800160405180910390a150505b81546000906110419082906001600160a01b03163388611bf5565b9050808260010160008282546110579190612693565b90915550506003830154600183015464e8d4a510009161107691612622565b6110809190612641565b825560408051338152602081018890529081018290527f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b690606001610902565b6110c86119bc565b61096b611d8d565b6110d86119bc565b6110e0611a16565b8360098111156111325760405162461bcd60e51b815260206004820152601c60248201527f4641524d494e475f504f4f4c3a204d4f52455f5448414e5f4e494e450000000060448201526064016104f1565b60005b81811015611180576111788787838181106111525761115261260c565b9050602002013586868481811061116b5761116b61260c565b9050602002013585611381565b600101611135565b50505050505050565b60008060cc848154811061119f5761119f61260c565b600091825260209182902060408051608081018252600490930290910180546001600160a01b0316835260018101549383019390935260028301549082018190526003909201546060820152915015806111fc5750806040015142105b80611208575060cb5442105b1561121757600091505061137b565b600084815260cf602090815260408083206001600160a01b038781168552908352818420825180840184528154815260019091015493810193909352845191516370a0823160e01b81523060048201529293929116906370a0823190602401602060405180830381865afa158015611293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b7919061267a565b606084015190915060008290036112d557600094505050505061137b565b600087815260ce602052604090205460ff161561133d5760008460400151426112fe9190612663565b905060008186602001516113129190612622565b90508361132464e8d4a5100083612622565b61132e9190612641565b6113389084612693565b925050505b6000836000015164e8d4a5100083866020015161135a9190612622565b6113649190612641565b61136e9190612663565b955061137b945050505050565b92915050565b6113896119bc565b611391611a16565b60cc83815481106113a4576113a461260c565b9060005260206000209060040201600201546000036114055760405162461bcd60e51b815260206004820152601c60248201527f4641524d494e475f504f4f4c3a20504f4f4c5f4e4f545f45584953540000000060448201526064016104f1565b801561141857611413610de1565b611421565b61142183610c2c565b600083815260ce602052604090205460ff161580156114405750600082115b156114a257600083815260ce602052604090819020805460ff19166001179055517f6140f1d5adcbca6c6b24c3b5e695335cd1a2071c7e03881172dc9eb0e488225c906114999085904290918252602082015260400190565b60405180910390a15b8160000361150857600083815260ce602052604090819020805460ff19169055517f4654f9b7bb3ba4d66e3a4e972e39db189ac7b4fdf5f2a95d57a4eb4d91a16d45906114fb9085904290918252602082015260400190565b60405180910390a1505050565b8160cc848154811061151c5761151c61260c565b9060005260206000209060040201600101819055507f0226e7c985ca3cd56b9373c9d63f632fc54d30a22623f59774a07db77204146783836040516114fb929190918252602082015260400190565b505050565b6115786119bc565b611580611a16565b60ca546001146115d25760405162461bcd60e51b815260206004820152601460248201527f414c52454144595f484156494e475f504f4f4c5300000000000000000000000060448201526064016104f1565b60cb8190556040518181527faf8fc8a4c9a55a9a29c3e99cd1797d43062c696f192896c79cbebd7da3286d829060200160405180910390a150565b600054610100900460ff161580801561162d5750600054600160ff909116105b806116475750303b158015611647575060005460ff166001145b6116b95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016104f1565b6000805460ff1916600117905580156116dc576000805461ff0019166101001790555b6001600160a01b0382166117325760405162461bcd60e51b815260206004820152601a60248201527f4641524d494e475f504f4f4c3a205a45524f5f4144445245535300000000000060448201526064016104f1565b61173a611dca565b611742611e3d565b61174a611eaf565b60c980546001600160a01b0380851673ffffffffffffffffffffffffffffffffffffffff1992831617909255600160ca819055604080516080810182526000808252602082018181529282018181526060830182815260cc80549687018155909252915160049094027f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe81018054959097169490951693909317909455517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebf83015591517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ec082015590517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ec1909101558015610e21576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b606060cc805480602002602001604051908101604052809291908181526020016000905b82821015611923576000848152602090819020604080516080810182526004860290920180546001600160a01b031683526001808201548486015260028201549284019290925260030154606083015290835290920191016118c6565b50505050905090565b6119346119bc565b6001600160a01b0381166119b05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104f1565b6119b981611d2e565b50565b6033546001600160a01b0316331461096b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f1565b60975460ff161561096b5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016104f1565b6001600160a01b038116600090815260cd6020526040812054808203611a90576000611a93565b60015b9392505050565b60c9546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0b919061267a565b905060008111611b5d5760405162461bcd60e51b815260206004820152601c60248201527f4641524d494e475f504f4f4c3a204e4f5f4655525f494e5f504f4f4c0000000060448201526064016104f1565b80831115611b835760c954611b7c906001600160a01b03168583611f26565b905061137b565b60c954611b9a906001600160a01b03168585611f26565b8291505061137b565b611bab611fb6565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6040516370a0823160e01b815230600482015260009081906001600160a01b038616906370a0823190602401602060405180830381865afa158015611c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c62919061267a565b90508515611c8357611c7e6001600160a01b0386168585611f26565b611c98565b611c986001600160a01b038616853086612008565b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015611cdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d03919061267a565b905086611d1957611d148282612663565b611d23565b611d238183612663565b979650505050505050565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611d95611a16565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611bd83390565b600054610100900460ff16611e355760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016104f1565b61096b612046565b600054610100900460ff16611ea85760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016104f1565b6001606555565b600054610100900460ff16611f1a5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016104f1565b6097805460ff19169055565b6040516001600160a01b03831660248201526044810182905261156b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526120ba565b60975460ff1661096b5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104f1565b6040516001600160a01b03808516602483015283166044820152606481018290526120409085906323b872dd60e01b90608401611f52565b50505050565b600054610100900460ff166120b15760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016104f1565b61096b33611d2e565b600061210f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661219f9092919063ffffffff16565b80519091501561156b578080602001905181019061212d91906126ab565b61156b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104f1565b60606121ae84846000856121b6565b949350505050565b60608247101561222e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016104f1565b6001600160a01b0385163b6122855760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f1565b600080866001600160a01b031685876040516122a191906126c8565b60006040518083038185875af1925050503d80600081146122de576040519150601f19603f3d011682016040523d82523d6000602084013e6122e3565b606091505b5091509150611d23828286606083156122fd575081611a93565b82511561230d5782518084602001fd5b8160405162461bcd60e51b81526004016104f19190612353565b60005b8381101561234257818101518382015260200161232a565b838111156120405750506000910152565b6020815260008251806020840152612372816040850160208701612327565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461239d57600080fd5b919050565b80151581146119b957600080fd5b6000806000606084860312156123c557600080fd5b6123ce84612386565b92506020840135915060408401356123e5816123a2565b809150509250925092565b6000806040838503121561240357600080fd5b8235915061241360208401612386565b90509250929050565b60006020828403121561242e57600080fd5b5035919050565b60006020828403121561244757600080fd5b611a9382612386565b6000806040838503121561246357600080fd5b50508035926020909101359150565b60008083601f84011261248457600080fd5b50813567ffffffffffffffff81111561249c57600080fd5b6020830191508360208260051b85010111156124b757600080fd5b9250929050565b6000806000806000606086880312156124d657600080fd5b853567ffffffffffffffff808211156124ee57600080fd5b6124fa89838a01612472565b9097509550602088013591508082111561251357600080fd5b5061252088828901612472565b9094509250506040860135612534816123a2565b809150509295509295909350565b60008060006060848603121561255757600080fd5b833592506020840135915060408401356123e5816123a2565b602080825282518282018190526000919060409081850190868401855b828110156125d057815180516001600160a01b0316855286810151878601528581015186860152606090810151908501526080909301929085019060010161258d565b5091979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612605576126056125dd565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561263c5761263c6125dd565b500290565b60008261265e57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612675576126756125dd565b500390565b60006020828403121561268c57600080fd5b5051919050565b600082198211156126a6576126a66125dd565b500190565b6000602082840312156126bd57600080fd5b8151611a93816123a2565b600082516126da818460208701612327565b919091019291505056fea164736f6c634300080d000a";

type FarmingPoolUpgradeableConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FarmingPoolUpgradeableConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FarmingPoolUpgradeable__factory extends ContractFactory {
  constructor(...args: FarmingPoolUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<FarmingPoolUpgradeable> {
    return super.deploy(overrides || {}) as Promise<FarmingPoolUpgradeable>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FarmingPoolUpgradeable {
    return super.attach(address) as FarmingPoolUpgradeable;
  }
  override connect(signer: Signer): FarmingPoolUpgradeable__factory {
    return super.connect(signer) as FarmingPoolUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FarmingPoolUpgradeableInterface {
    return new utils.Interface(_abi) as FarmingPoolUpgradeableInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FarmingPoolUpgradeable {
    return new Contract(address, _abi, signerOrProvider) as FarmingPoolUpgradeable;
  }
}
