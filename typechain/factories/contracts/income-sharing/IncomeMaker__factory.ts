/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../../common";
import type { IncomeMaker, IncomeMakerInterface } from "../../../contracts/income-sharing/IncomeMaker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProportion",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newProportion",
        type: "uint256",
      },
    ],
    name: "IncomeProportionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "otherTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "incomeTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "IncomeToToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newToken",
        type: "address",
      },
    ],
    name: "IncomeTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "PRICE_SCALE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "collectIncomeFromSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIncome",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IFurionSwapFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incomeProportion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incomeSharingVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incomeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_incomeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IFurionSwapV2Router",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_newIncomeProportion",
        type: "uint8",
      },
    ],
    name: "setIncomeProportion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newIncomeToken",
        type: "address",
      },
    ],
    name: "setIncomeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uint_MAX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506114c6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063bc66ce0a11610097578063ecb72ffb11610066578063ecb72ffb146101ce578063f2fde38b146101e1578063f887ea40146101f4578063f8c8765e1461020757600080fd5b8063bc66ce0a1461018b578063bd8148421461019e578063c33f59d3146101b1578063c45a0155146101bb57600080fd5b8063715018a6116100d3578063715018a614610156578063730b86e21461015e5780638da5cb5b1461016757806395ccea671461017857600080fd5b80633516bd42146100fa578063436e667d1461011657806344224a841461012b575b600080fd5b61010360695481565b6040519081526020015b60405180910390f35b6101296101243660046111cc565b61021a565b005b60675461013e906001600160a01b031681565b6040516001600160a01b03909116815260200161010d565b6101296102e7565b61010360001981565b6033546001600160a01b031661013e565b610129610186366004611204565b6102fb565b60685461013e906001600160a01b031681565b6101296101ac366004611230565b61035d565b610103620f424081565b60665461013e906001600160a01b031681565b6101036101dc36600461124d565b610431565b6101296101ef366004611230565b6106f8565b60655461013e906001600160a01b031681565b610129610215366004611286565b610788565b610222610908565b60648160ff1611156102a15760405162461bcd60e51b815260206004820152602560248201527f494e434f4d455f4d414b45523a204558434545445f50524f504f5254494f4e5f60448201527f52414e474500000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6069546040805191825260ff831660208301527fcd295070f1c6ae0c84d072d22354bea3b6bf1d4dec79122ec52302e2b89742a8910160405180910390a160ff16606955565b6102ef610908565b6102f96000610962565b565b610303610908565b6103176001600160a01b03831633836109c1565b604080516001600160a01b0384168152602081018390527f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695910160405180910390a15050565b610365610908565b6001600160a01b0381166103bb5760405162461bcd60e51b815260206004820152601a60248201527f494e434f4d455f4d414b45523a205a45524f5f414444524553530000000000006044820152606401610298565b606854604080516001600160a01b03928316815291831660208301527fed7b14238643cc3a509981e2f90c566f7842da34511087535632d8b2e8a13995910160405180910390a16068805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60665460405163e6a4390560e01b81526001600160a01b0384811660048301528381166024830152600092839291169063e6a4390590604401602060405180830381865afa158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab91906112e2565b90506001600160a01b0381166105035760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f4558495354000000006044820152606401610298565b600080846001600160a01b0316866001600160a01b031610610526578486610529565b85855b6040516370a0823160e01b815230600482015291935091506105ad9084906001600160a01b038216906370a0823190602401602060405180830381865afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c91906112ff565b6001600160a01b03861691906109c1565b60405163226bf2d160e21b815230600482015260009081906001600160a01b038616906389afcb449060240160408051808303816000875af11580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b9190611318565b91509150600061062b8584610a2d565b905060006106398584610a2d565b90506106458183611352565b6067546069546068546040516370a0823160e01b8152306004820152939b506106eb936001600160a01b03938416936064939216906370a0823190602401602060405180830381865afa1580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c491906112ff565b6106ce919061136a565b6106d89190611389565b6068546001600160a01b031691906109c1565b5050505050505092915050565b610700610908565b6001600160a01b03811661077c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610298565b61078581610962565b50565b600054610100900460ff16158080156107a85750600054600160ff909116105b806107c25750303b1580156107c2575060005460ff166001145b6108345760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610298565b6000805460ff191660011790558015610857576000805461ff0019166101001790555b61085f610b85565b606880546001600160a01b0380881673ffffffffffffffffffffffffffffffffffffffff19928316179092556065805487841690831617905560668054868416908316179055606780549285169290911691909117905560506069558015610901576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6033546001600160a01b031633146102f95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610298565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610a28908490610bf8565b505050565b6068546000906001600160a01b03848116911614610b7f5760665460685460405163e6a4390560e01b81526001600160a01b0386811660048301529182166024820152600092919091169063e6a4390590604401602060405180830381865afa158015610a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac291906112e2565b90506001600160a01b038116610b1a5760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f4558495354000000006044820152606401610298565b610b25848430610cdd565b606854604080516001600160a01b03808916825290921660208301528101859052606081018290529092507f8344388cfe5ad0701454f307530b263da2563c5d829476be8def9f18bc668a949060800160405180910390a1505b92915050565b600054610100900460ff16610bf05760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610298565b6102f9610fbe565b6000610c4d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110329092919063ffffffff16565b805190915015610a285780806020019051810190610c6b91906113ab565b610a285760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610298565b60665460685460405163e6a4390560e01b81526001600160a01b03868116600483015291821660248201526000928392169063e6a4390590604401602060405180830381865afa158015610d35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5991906112e2565b90506001600160a01b038116610db15760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f4558495354000000006044820152606401610298565b600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b81526004016040805180830381865afa158015610df1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1591906113f0565b6068546dffffffffffffffffffffffffffff92831694509116915060009081906001600160a01b03908116908a1610610e4f578284610e52565b83835b915091506000856001600160a01b031663978bbdb96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eba91906112ff565b90506000610eca826103e8611423565b610ed4908b61136a565b905080610ee3856103e861136a565b610eed9190611352565b610ef7848361136a565b610f019190611389565b9750610f176001600160a01b038c16888c6109c1565b60685460009081906001600160a01b03908116908e1610610f3a57896000610f3e565b60008a5b6040516336cd320560e11b815260048101839052602481018290526001600160a01b038e81166044830152929450909250908a1690636d9a640a90606401600060405180830381600087803b158015610f9657600080fd5b505af1158015610faa573d6000803e3d6000fd5b505050505050505050505050509392505050565b600054610100900460ff166110295760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610298565b6102f933610962565b6060611041848460008561104b565b90505b9392505050565b6060824710156110c35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610298565b6001600160a01b0385163b61111a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610298565b600080866001600160a01b03168587604051611136919061146a565b60006040518083038185875af1925050503d8060008114611173576040519150601f19603f3d011682016040523d82523d6000602084013e611178565b606091505b5091509150611188828286611193565b979650505050505050565b606083156111a2575081611044565b8251156111b25782518084602001fd5b8160405162461bcd60e51b81526004016102989190611486565b6000602082840312156111de57600080fd5b813560ff8116811461104457600080fd5b6001600160a01b038116811461078557600080fd5b6000806040838503121561121757600080fd5b8235611222816111ef565b946020939093013593505050565b60006020828403121561124257600080fd5b8135611044816111ef565b6000806040838503121561126057600080fd5b823561126b816111ef565b9150602083013561127b816111ef565b809150509250929050565b6000806000806080858703121561129c57600080fd5b84356112a7816111ef565b935060208501356112b7816111ef565b925060408501356112c7816111ef565b915060608501356112d7816111ef565b939692955090935050565b6000602082840312156112f457600080fd5b8151611044816111ef565b60006020828403121561131157600080fd5b5051919050565b6000806040838503121561132b57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b600082198211156113655761136561133c565b500190565b60008160001904831182151516156113845761138461133c565b500290565b6000826113a657634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156113bd57600080fd5b8151801515811461104457600080fd5b80516dffffffffffffffffffffffffffff811681146113eb57600080fd5b919050565b6000806040838503121561140357600080fd5b61140c836113cd565b915061141a602084016113cd565b90509250929050565b6000828210156114355761143561133c565b500390565b60005b8381101561145557818101518382015260200161143d565b83811115611464576000848401525b50505050565b6000825161147c81846020870161143a565b9190910192915050565b60208152600082518060208401526114a581604085016020870161143a565b601f01601f1916919091016040019291505056fea164736f6c634300080d000a";

type IncomeMakerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: IncomeMakerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class IncomeMaker__factory extends ContractFactory {
  constructor(...args: IncomeMakerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<IncomeMaker> {
    return super.deploy(overrides || {}) as Promise<IncomeMaker>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IncomeMaker {
    return super.attach(address) as IncomeMaker;
  }
  override connect(signer: Signer): IncomeMaker__factory {
    return super.connect(signer) as IncomeMaker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncomeMakerInterface {
    return new utils.Interface(_abi) as IncomeMakerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IncomeMaker {
    return new Contract(address, _abi, signerOrProvider) as IncomeMaker;
  }
}
