/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { BigNumberish, Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../../common";
import type {
  JumpInterestRateModel,
  JumpInterestRateModelInterface,
} from "../../../contracts/money-market/JumpInterestRateModel";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_kink",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRatePerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jumpMultiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kink",
        type: "uint256",
      },
    ],
    name: "NewInterestParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_INTEREST_RATE_MODEL",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blocksPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserves",
        type: "uint256",
      },
    ],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInterestRateModel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "jumpMultiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kink",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_kink",
        type: "uint256",
      },
    ],
    name: "updateJumpRateModel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserves",
        type: "uint256",
      },
    ],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161086038038061086083398101604081905261002f91610133565b610038336100e3565b6100456220148085610169565b600255610055816220148061018b565b610067670de0b6b3a76400008561018b565b6100719190610169565b6001556100816220148083610169565b60038190556004829055600254600154604080519283526020830191909152810191909152606081018290527f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9060800160405180910390a1505050506101b8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000806080858703121561014957600080fd5b505082516020840151604085015160609095015191969095509092509050565b60008261018657634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156101b357634e487b7160e01b600052601160045260246000fd5b500290565b610699806101c76000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063b9f9850a11610066578063b9f9850a146101a1578063f14039de146101aa578063f2fde38b146101b3578063fd2da339146101c657600080fd5b80638da5cb5b14610169578063a385fb9614610184578063b81688161461018e57600080fd5b80632fcda258116100c85780632fcda2581461013d5780636e71e2d814610145578063715018a6146101585780638726bb891461016057600080fd5b806315f24053146100ef5780632037f3e7146101155780632191f92a1461012a575b600080fd5b6101026100fd36600461057f565b6101cf565b6040519081526020015b60405180910390f35b6101286101233660046105ab565b61029d565b005b60015b604051901515815260200161010c565b61012d600181565b61010261015336600461057f565b61034d565b610128610398565b61010260015481565b6000546040516001600160a01b03909116815260200161010c565b6101026220148081565b61010261019c3660046105ab565b6103ac565b61010260035481565b61010260025481565b6101286101c13660046105dd565b610428565b61010260045481565b6000806101dd85858561034d565b9050600454811161021e57600254670de0b6b3a764000060015483610202919061061c565b61020c919061063b565b610216919061065d565b915050610296565b6000600254670de0b6b3a764000060015460045461023c919061061c565b610246919061063b565b610250919061065d565b90506000600454836102629190610675565b905081670de0b6b3a76400006003548361027c919061061c565b610286919061063b565b610290919061065d565b93505050505b9392505050565b6102a56104bd565b6102b2622014808561063b565b6002556102c2816220148061061c565b6102d4670de0b6b3a76400008561061c565b6102de919061063b565b6001556102ee622014808361063b565b60038190556004829055600254600154604080519283526020830191909152810191909152606081018290527f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9060800160405180910390a150505050565b60008260000361035f57506000610296565b8161036a848661065d565b6103749190610675565b610386670de0b6b3a76400008561061c565b610390919061063b565b949350505050565b6103a06104bd565b6103aa6000610517565b565b6000806103c183670de0b6b3a7640000610675565b905060006103d08787876101cf565b90506000670de0b6b3a76400006103e7848461061c565b6103f1919061063b565b9050670de0b6b3a7640000816104088a8a8a61034d565b610412919061061c565b61041c919061063b565b98975050505050505050565b6104306104bd565b6001600160a01b0381166104b15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104ba81610517565b50565b6000546001600160a01b031633146103aa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a8565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006060848603121561059457600080fd5b505081359360208301359350604090920135919050565b600080600080608085870312156105c157600080fd5b5050823594602084013594506040840135936060013592509050565b6000602082840312156105ef57600080fd5b81356001600160a01b038116811461029657600080fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561063657610636610606565b500290565b60008261065857634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561067057610670610606565b500190565b60008282101561068757610687610606565b50039056fea164736f6c634300080d000a";

type JumpInterestRateModelConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: JumpInterestRateModelConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class JumpInterestRateModel__factory extends ContractFactory {
  constructor(...args: JumpInterestRateModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseRatePerYear: PromiseOrValue<BigNumberish>,
    _multiplierPerYear: PromiseOrValue<BigNumberish>,
    _jumpMultiplierPerYear: PromiseOrValue<BigNumberish>,
    _kink: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<JumpInterestRateModel> {
    return super.deploy(
      _baseRatePerYear,
      _multiplierPerYear,
      _jumpMultiplierPerYear,
      _kink,
      overrides || {},
    ) as Promise<JumpInterestRateModel>;
  }
  override getDeployTransaction(
    _baseRatePerYear: PromiseOrValue<BigNumberish>,
    _multiplierPerYear: PromiseOrValue<BigNumberish>,
    _jumpMultiplierPerYear: PromiseOrValue<BigNumberish>,
    _kink: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _baseRatePerYear,
      _multiplierPerYear,
      _jumpMultiplierPerYear,
      _kink,
      overrides || {},
    );
  }
  override attach(address: string): JumpInterestRateModel {
    return super.attach(address) as JumpInterestRateModel;
  }
  override connect(signer: Signer): JumpInterestRateModel__factory {
    return super.connect(signer) as JumpInterestRateModel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JumpInterestRateModelInterface {
    return new utils.Interface(_abi) as JumpInterestRateModelInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): JumpInterestRateModel {
    return new Contract(address, _abi, signerOrProvider) as JumpInterestRateModel;
  }
}
