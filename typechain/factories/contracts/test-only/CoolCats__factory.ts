/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../../common";
import type { CoolCats, CoolCatsInterface } from "../../../contracts/test-only/CoolCats";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "adopt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "giveAway",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526064600b5566d529ae9e860000600c55600d805460ff191660011790553480156200002e57600080fd5b506040805180820182526009815268436f6f6c204361747360b81b60208083019182528351808501909452600484526310d3d3d360e21b9084015281519192916200007c916000916200015b565b508051620000929060019060208401906200015b565b5050600d8054610100600160a81b0319163361010002179055506040805180820190915260208082527f68747470733a2f2f6170692e636f6f6c636174736e66742e636f6d2f6361742f90820152620000eb90620000f1565b6200023d565b600d5461010090046001600160a01b03163314620001425760405162461bcd60e51b815260206004820152600a60248201526927a7262cafa7aba722a960b11b604482015260640160405180910390fd5b80516200015790600a9060208401906200015b565b5050565b828054620001699062000201565b90600052602060002090601f0160209004810192826200018d5760008555620001d8565b82601f10620001a857805160ff1916838001178555620001d8565b82800160010185558215620001d8579182015b82811115620001d8578251825591602001919060010190620001bb565b50620001e6929150620001ea565b5090565b5b80821115620001e65760008155600101620001eb565b600181811c908216806200021657607f821691505b6020821081036200023757634e487b7160e01b600052602260045260246000fd5b50919050565b61201c806200024d6000396000f3fe6080604052600436106101965760003560e01c806355f804b3116100e157806395d89b411161008a578063b88d4fde11610064578063b88d4fde14610454578063c87b56dd14610474578063ca80014414610494578063e985e9c5146104b457600080fd5b806395d89b411461040a57806398d5fdca1461041f578063a22cb4651461043457600080fd5b80638588b2c5116100bb5780638588b2c5146103b25780638da5cb5b146103c557806391b7f5ed146103ea57600080fd5b806355f804b3146103525780636352211e1461037257806370a082311461039257600080fd5b806318160ddd1161014357806342842e0e1161011d57806342842e0e146102e5578063438b6300146103055780634f6ccce71461033257600080fd5b806318160ddd1461028657806323b872dd146102a55780632f745c59146102c557600080fd5b8063081812fc11610174578063081812fc14610214578063095ea7b31461024c57806316c61ccc1461026c57600080fd5b806301ffc9a71461019b57806302329a29146101d057806306fdde03146101f2575b600080fd5b3480156101a757600080fd5b506101bb6101b6366004611b0b565b6104fd565b60405190151581526020015b60405180910390f35b3480156101dc57600080fd5b506101f06101eb366004611b3d565b610528565b005b3480156101fe57600080fd5b5061020761058c565b6040516101c79190611bb0565b34801561022057600080fd5b5061023461022f366004611bc3565b61061e565b6040516001600160a01b0390911681526020016101c7565b34801561025857600080fd5b506101f0610267366004611bf3565b610645565b34801561027857600080fd5b50600d546101bb9060ff1681565b34801561029257600080fd5b506008545b6040519081526020016101c7565b3480156102b157600080fd5b506101f06102c0366004611c1d565b61075a565b3480156102d157600080fd5b506102976102e0366004611bf3565b6107d2565b3480156102f157600080fd5b506101f0610300366004611c1d565b61087a565b34801561031157600080fd5b50610325610320366004611c59565b610895565b6040516101c79190611c74565b34801561033e57600080fd5b5061029761034d366004611bc3565b610937565b34801561035e57600080fd5b506101f061036d366004611d44565b6109db565b34801561037e57600080fd5b5061023461038d366004611bc3565b610a3e565b34801561039e57600080fd5b506102976103ad366004611c59565b610aa3565b6101f06103c0366004611bc3565b610b3d565b3480156103d157600080fd5b50600d546102349061010090046001600160a01b031681565b3480156103f657600080fd5b506101f0610405366004611bc3565b610cec565b34801561041657600080fd5b50610207610d3d565b34801561042b57600080fd5b50600c54610297565b34801561044057600080fd5b506101f061044f366004611d8d565b610d4c565b34801561046057600080fd5b506101f061046f366004611dc0565b610d57565b34801561048057600080fd5b5061020761048f366004611bc3565b610dd6565b3480156104a057600080fd5b506101f06104af366004611bf3565b610e3d565b3480156104c057600080fd5b506101bb6104cf366004611e3c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b1480610522575061052282610ee4565b92915050565b600d5461010090046001600160a01b031633146105795760405162461bcd60e51b815260206004820152600a60248201526927a7262cafa7aba722a960b11b60448201526064015b60405180910390fd5b600d805460ff1916911515919091179055565b60606000805461059b90611e66565b80601f01602080910402602001604051908101604052809291908181526020018280546105c790611e66565b80156106145780601f106105e957610100808354040283529160200191610614565b820191906000526020600020905b8154815290600101906020018083116105f757829003601f168201915b5050505050905090565b600061062982610f34565b506000908152600460205260409020546001600160a01b031690565b600061065082610a3e565b9050806001600160a01b0316836001600160a01b0316036106bd5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610570565b336001600160a01b03821614806106d957506106d981336104cf565b61074b5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610570565b6107558383610f9b565b505050565b6107643382611016565b6107c75760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608401610570565b610755838383611095565b60006107dd83610aa3565b82106108515760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610570565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61075583838360405180602001604052806000815250610d57565b606060006108a283610aa3565b905060008167ffffffffffffffff8111156108bf576108bf611cb8565b6040519080825280602002602001820160405280156108e8578160200160208202803683370190505b50905060005b8281101561092f5761090085826107d2565b82828151811061091257610912611ea0565b60209081029190910101528061092781611ecc565b9150506108ee565b509392505050565b600061094260085490565b82106109b65760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610570565b600882815481106109c9576109c9611ea0565b90600052602060002001549050919050565b600d5461010090046001600160a01b03163314610a275760405162461bcd60e51b815260206004820152600a60248201526927a7262cafa7aba722a960b11b6044820152606401610570565b8051610a3a90600a906020840190611a5c565b5050565b6000818152600260205260408120546001600160a01b0316806105225760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610570565b60006001600160a01b038216610b215760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610570565b506001600160a01b031660009081526003602052604090205490565b6000610b4860085490565b600d5490915060ff1615610b9e5760405162461bcd60e51b815260206004820152600b60248201527f53616c65207061757365640000000000000000000000000000000000000000006044820152606401610570565b60158210610bf95760405162461bcd60e51b815260206004820152602260248201527f596f752063616e2061646f70742061206d6178696d756d206f66203230204361604482015261747360f01b6064820152608401610570565b600b54610c0890612710611ee5565b610c128383611efc565b10610c5f5760405162461bcd60e51b815260206004820152601b60248201527f45786365656473206d6178696d756d204361747320737570706c7900000000006044820152606401610570565b81600c54610c6d9190611f14565b341015610cbc5760405162461bcd60e51b815260206004820152601960248201527f45746865722073656e74206973206e6f7420636f7272656374000000000000006044820152606401610570565b60005b8281101561075557610cda33610cd58385611efc565b611261565b80610ce481611ecc565b915050610cbf565b600d5461010090046001600160a01b03163314610d385760405162461bcd60e51b815260206004820152600a60248201526927a7262cafa7aba722a960b11b6044820152606401610570565b600c55565b60606001805461059b90611e66565b610a3a33838361127b565b610d613383611016565b610dc45760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608401610570565b610dd084848484611349565b50505050565b6060610de182610f34565b6000610deb6113c7565b90506000815111610e0b5760405180602001604052806000815250610e36565b80610e15846113d6565b604051602001610e26929190611f33565b6040516020818303038152906040525b9392505050565b600b54811115610e8f5760405162461bcd60e51b815260206004820152601b60248201527f457863656564732072657365727665642043617420737570706c7900000000006044820152606401610570565b6000610e9a60085490565b905060005b82811015610ec757610eb584610cd58385611efc565b80610ebf81611ecc565b915050610e9f565b5081600b6000828254610eda9190611ee5565b9091555050505050565b60006001600160e01b031982166380ac58cd60e01b1480610f1557506001600160e01b03198216635b5e139f60e01b145b8061052257506301ffc9a760e01b6001600160e01b0319831614610522565b6000818152600260205260409020546001600160a01b0316610f985760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610570565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610fdd82610a3e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061102283610a3e565b9050806001600160a01b0316846001600160a01b0316148061106957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061108d5750836001600160a01b03166110828461061e565b6001600160a01b0316145b949350505050565b826001600160a01b03166110a882610a3e565b6001600160a01b0316146111245760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610570565b6001600160a01b0382166111865760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610570565b6111918383836114ef565b61119c600082610f9b565b6001600160a01b03831660009081526003602052604081208054600192906111c5908490611ee5565b90915550506001600160a01b03821660009081526003602052604081208054600192906111f3908490611efc565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610a3a8282604051806020016040528060008152506115a7565b816001600160a01b0316836001600160a01b0316036112dc5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610570565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611354848484611095565b61136084848484611625565b610dd05760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610570565b6060600a805461059b90611e66565b6060816000036113fd5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611427578061141181611ecc565b91506114209050600a83611f78565b9150611401565b60008167ffffffffffffffff81111561144257611442611cb8565b6040519080825280601f01601f19166020018201604052801561146c576020820181803683370190505b5090505b841561108d57611481600183611ee5565b915061148e600a86611f8c565b611499906030611efc565b60f81b8183815181106114ae576114ae611ea0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506114e8600a86611f78565b9450611470565b6001600160a01b03831661154a5761154581600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61156d565b816001600160a01b0316836001600160a01b03161461156d5761156d8382611771565b6001600160a01b038216611584576107558161180e565b826001600160a01b0316826001600160a01b0316146107555761075582826118bd565b6115b18383611901565b6115be6000848484611625565b6107555760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610570565b60006001600160a01b0384163b1561176657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611669903390899088908890600401611fa0565b6020604051808303816000875af19250505080156116a4575060408051601f3d908101601f191682019092526116a191810190611fdc565b60015b61174c573d8080156116d2576040519150601f19603f3d011682016040523d82523d6000602084013e6116d7565b606091505b5080516000036117445760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610570565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061108d565b506001949350505050565b6000600161177e84610aa3565b6117889190611ee5565b6000838152600760205260409020549091508082146117db576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061182090600190611ee5565b6000838152600960205260408120546008805493945090928490811061184857611848611ea0565b90600052602060002001549050806008838154811061186957611869611ea0565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806118a1576118a1611ff9565b6001900381819060005260206000200160009055905550505050565b60006118c883610aa3565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166119575760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610570565b6000818152600260205260409020546001600160a01b0316156119bc5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610570565b6119c8600083836114ef565b6001600160a01b03821660009081526003602052604081208054600192906119f1908490611efc565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611a6890611e66565b90600052602060002090601f016020900481019282611a8a5760008555611ad0565b82601f10611aa357805160ff1916838001178555611ad0565b82800160010185558215611ad0579182015b82811115611ad0578251825591602001919060010190611ab5565b50611adc929150611ae0565b5090565b5b80821115611adc5760008155600101611ae1565b6001600160e01b031981168114610f9857600080fd5b600060208284031215611b1d57600080fd5b8135610e3681611af5565b80358015158114611b3857600080fd5b919050565b600060208284031215611b4f57600080fd5b610e3682611b28565b60005b83811015611b73578181015183820152602001611b5b565b83811115610dd05750506000910152565b60008151808452611b9c816020860160208601611b58565b601f01601f19169290920160200192915050565b602081526000610e366020830184611b84565b600060208284031215611bd557600080fd5b5035919050565b80356001600160a01b0381168114611b3857600080fd5b60008060408385031215611c0657600080fd5b611c0f83611bdc565b946020939093013593505050565b600080600060608486031215611c3257600080fd5b611c3b84611bdc565b9250611c4960208501611bdc565b9150604084013590509250925092565b600060208284031215611c6b57600080fd5b610e3682611bdc565b6020808252825182820181905260009190848201906040850190845b81811015611cac57835183529284019291840191600101611c90565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611ce957611ce9611cb8565b604051601f8501601f19908116603f01168101908282118183101715611d1157611d11611cb8565b81604052809350858152868686011115611d2a57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611d5657600080fd5b813567ffffffffffffffff811115611d6d57600080fd5b8201601f81018413611d7e57600080fd5b61108d84823560208401611cce565b60008060408385031215611da057600080fd5b611da983611bdc565b9150611db760208401611b28565b90509250929050565b60008060008060808587031215611dd657600080fd5b611ddf85611bdc565b9350611ded60208601611bdc565b925060408501359150606085013567ffffffffffffffff811115611e1057600080fd5b8501601f81018713611e2157600080fd5b611e3087823560208401611cce565b91505092959194509250565b60008060408385031215611e4f57600080fd5b611e5883611bdc565b9150611db760208401611bdc565b600181811c90821680611e7a57607f821691505b602082108103611e9a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611ede57611ede611eb6565b5060010190565b600082821015611ef757611ef7611eb6565b500390565b60008219821115611f0f57611f0f611eb6565b500190565b6000816000190483118215151615611f2e57611f2e611eb6565b500290565b60008351611f45818460208801611b58565b835190830190611f59818360208801611b58565b01949350505050565b634e487b7160e01b600052601260045260246000fd5b600082611f8757611f87611f62565b500490565b600082611f9b57611f9b611f62565b500690565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611fd26080830184611b84565b9695505050505050565b600060208284031215611fee57600080fd5b8151610e3681611af5565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080d000a";

type CoolCatsConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: CoolCatsConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class CoolCats__factory extends ContractFactory {
  constructor(...args: CoolCatsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<CoolCats> {
    return super.deploy(overrides || {}) as Promise<CoolCats>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CoolCats {
    return super.attach(address) as CoolCats;
  }
  override connect(signer: Signer): CoolCats__factory {
    return super.connect(signer) as CoolCats__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoolCatsInterface {
    return new utils.Interface(_abi) as CoolCatsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CoolCats {
    return new Contract(address, _abi, signerOrProvider) as CoolCats;
  }
}
