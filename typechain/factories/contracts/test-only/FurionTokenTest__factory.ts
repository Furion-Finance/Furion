/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../../common";
import type { FurionTokenTest, FurionTokenTestInterface } from "../../../contracts/test-only/FurionTokenTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_testers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b506040516200150e3803806200150e833981016040819052620000359162000396565b6040518060400160405280600f81526020016e119d5c9a5bdb951bdad95b95195cdd608a1b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600f81526020016e119d5c9a5bdb951bdad95b95195cdd608a1b81525060405180604001604052806003815260200162232aa960e91b8152508160039080519060200190620000d4929190620002bd565b508051620000ea906004906020840190620002bd565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c0526101205250600093505050505b8151811015620001cd57620001c4828281518110620001a657620001a662000468565b6020026020010151683635c9adc5dea00000620001d560201b60201c565b60010162000183565b5050620004e1565b6001600160a01b038216620002305760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200024491906200047e565b90915550506001600160a01b03821660009081526020819052604081208054839290620002739084906200047e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620002cb90620004a5565b90600052602060002090601f016020900481019282620002ef57600085556200033a565b82601f106200030a57805160ff19168380011785556200033a565b828001600101855582156200033a579182015b828111156200033a5782518255916020019190600101906200031d565b50620003489291506200034c565b5090565b5b808211156200034857600081556001016200034d565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200039157600080fd5b919050565b60006020808385031215620003aa57600080fd5b82516001600160401b0380821115620003c257600080fd5b818501915085601f830112620003d757600080fd5b815181811115620003ec57620003ec62000363565b8060051b604051601f19603f8301168101818110858211171562000414576200041462000363565b6040529182528482019250838101850191888311156200043357600080fd5b938501935b828510156200045c576200044c8562000379565b8452938501939285019262000438565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008219821115620004a057634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620004ba57607f821691505b602082108103620004db57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051610fdd6200053160003960006109e001526000610a2f01526000610a0a015260006109630152600061098d015260006109b70152610fdd6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101c3578063a9059cbb146101d6578063d505accf146101e9578063dd62ed3e146101fe57600080fd5b806370a082311461017f5780637ecebe00146101a857806395d89b41146101bb57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce567146101555780633644e51514610164578063395093511461016c57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610237565b6040516101049190610dc1565b60405180910390f35b61012061011b366004610e32565b6102c9565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610e5c565b6102e1565b60405160128152602001610104565b610134610305565b61012061017a366004610e32565b610314565b61013461018d366004610e98565b6001600160a01b031660009081526020819052604090205490565b6101346101b6366004610e98565b610353565b6100f7610373565b6101206101d1366004610e32565b610382565b6101206101e4366004610e32565b610431565b6101fc6101f7366004610eba565b61043f565b005b61013461020c366004610f2d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461024690610f60565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610f60565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050505050905090565b6000336102d78185856105a3565b5060019392505050565b6000336102ef8582856106c7565b6102fa858585610759565b506001949350505050565b600061030f610956565b905090565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102d7908290869061034e908790610f94565b6105a3565b6001600160a01b0381166000908152600560205260408120545b92915050565b60606004805461024690610f60565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104245760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102fa82868684036105a3565b6000336102d7818585610759565b8342111561048f5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161041b565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886104be8c610a7d565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061051982610aa5565b9050600061052982878787610af3565b9050896001600160a01b0316816001600160a01b03161461058c5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161041b565b6105978a8a8a6105a3565b50505050505050505050565b6001600160a01b0383166106055760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161041b565b6001600160a01b0382166106665760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161041b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461075357818110156107465760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161041b565b61075384848484036105a3565b50505050565b6001600160a01b0383166107d55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161041b565b6001600160a01b0382166108375760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161041b565b6001600160a01b038316600090815260208190526040902054818110156108c65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161041b565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108fd908490610f94565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161094991815260200190565b60405180910390a3610753565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156109af57507f000000000000000000000000000000000000000000000000000000000000000046145b156109d957507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b600061036d610ab2610956565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610b0487878787610b1b565b91509150610b1181610c08565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610b525750600090506003610bff565b8460ff16601b14158015610b6a57508460ff16601c14155b15610b7b5750600090506004610bff565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610bcf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610bf857600060019250925050610bff565b9150600090505b94509492505050565b6000816004811115610c1c57610c1c610fba565b03610c245750565b6001816004811115610c3857610c38610fba565b03610c855760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161041b565b6002816004811115610c9957610c99610fba565b03610ce65760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161041b565b6003816004811115610cfa57610cfa610fba565b03610d525760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161041b565b6004816004811115610d6657610d66610fba565b03610dbe5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161041b565b50565b600060208083528351808285015260005b81811015610dee57858101830151858201604001528201610dd2565b81811115610e00576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610e2d57600080fd5b919050565b60008060408385031215610e4557600080fd5b610e4e83610e16565b946020939093013593505050565b600080600060608486031215610e7157600080fd5b610e7a84610e16565b9250610e8860208501610e16565b9150604084013590509250925092565b600060208284031215610eaa57600080fd5b610eb382610e16565b9392505050565b600080600080600080600060e0888a031215610ed557600080fd5b610ede88610e16565b9650610eec60208901610e16565b95506040880135945060608801359350608088013560ff81168114610f1057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610f4057600080fd5b610f4983610e16565b9150610f5760208401610e16565b90509250929050565b600181811c90821680610f7457607f821691505b602082108103610a9f57634e487b7160e01b600052602260045260246000fd5b60008219821115610fb557634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052602160045260246000fdfea164736f6c634300080d000a";

type FurionTokenTestConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: FurionTokenTestConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class FurionTokenTest__factory extends ContractFactory {
  constructor(...args: FurionTokenTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _testers: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<FurionTokenTest> {
    return super.deploy(_testers, overrides || {}) as Promise<FurionTokenTest>;
  }
  override getDeployTransaction(
    _testers: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_testers, overrides || {});
  }
  override attach(address: string): FurionTokenTest {
    return super.attach(address) as FurionTokenTest;
  }
  override connect(signer: Signer): FurionTokenTest__factory {
    return super.connect(signer) as FurionTokenTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FurionTokenTestInterface {
    return new utils.Interface(_abi) as FurionTokenTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FurionTokenTest {
    return new Contract(address, _abi, signerOrProvider) as FurionTokenTest;
  }
}
