/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../../common";
import type { NFTest1, NFTest1Interface } from "../../../contracts/test-only/NFTest1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e3938038062001e39833981016040819052620000349162000636565b60408051808201825260078152664e46546573743160c81b6020808301918252835180850190945260048452634e46543160e01b9084015281519192916200007f916000916200055d565b508051620000959060019060208401906200055d565b505050620000b2620000ac620000ff60201b60201c565b62000103565b805160005b81811015620000f657620000ed838281518110620000d957620000d962000708565b60200260200101516200015560201b60201c565b600101620000b7565b5050506200082f565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200015f620001a1565b60006200017860076200020360201b6200084c1760201c565b90506200019160076200020760201b620008501760201c565b6200019d828262000210565b5050565b6006546001600160a01b03163314620002015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b5490565b80546001019055565b6200019d8282604051806020016040528060008152506200023260201b60201c565b6200023e8383620002aa565b6200024d6000848484620003f2565b620002a55760405162461bcd60e51b8152602060048201526032602482015260008051602062001e1983398151915260448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401620001f8565b505050565b6001600160a01b038216620003025760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401620001f8565b6000818152600260205260409020546001600160a01b031615620003695760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401620001f8565b6001600160a01b0382166000908152600360205260408120805460019290620003949084906200071e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600062000413846001600160a01b03166200054e60201b620008591760201c565b156200054257604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906200044d90339089908890889060040162000745565b6020604051808303816000875af19250505080156200048b575060408051601f3d908101601f191682019092526200048891810190620007c0565b60015b62000527573d808015620004bc576040519150601f19603f3d011682016040523d82523d6000602084013e620004c1565b606091505b5080516000036200051f5760405162461bcd60e51b8152602060048201526032602482015260008051602062001e1983398151915260448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401620001f8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905062000546565b5060015b949350505050565b6001600160a01b03163b151590565b8280546200056b90620007f3565b90600052602060002090601f0160209004810192826200058f5760008555620005da565b82601f10620005aa57805160ff1916838001178555620005da565b82800160010185558215620005da579182015b82811115620005da578251825591602001919060010190620005bd565b50620005e8929150620005ec565b5090565b5b80821115620005e85760008155600101620005ed565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200063157600080fd5b919050565b600060208083850312156200064a57600080fd5b82516001600160401b03808211156200066257600080fd5b818501915085601f8301126200067757600080fd5b8151818111156200068c576200068c62000603565b8060051b604051601f19603f83011681018181108582111715620006b457620006b462000603565b604052918252848201925083810185019188831115620006d357600080fd5b938501935b82851015620006fc57620006ec8562000619565b84529385019392850192620006d8565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600082198211156200074057634e487b7160e01b600052601160045260246000fd5b500190565b600060018060a01b038087168352602081871681850152856040850152608060608501528451915081608085015260005b82811015620007945785810182015185820160a00152810162000776565b82811115620007a757600060a084870101525b5050601f01601f19169190910160a00195945050505050565b600060208284031215620007d357600080fd5b81516001600160e01b031981168114620007ec57600080fd5b9392505050565b600181811c908216806200080857607f821691505b6020821081036200082957634e487b7160e01b600052602260045260246000fd5b50919050565b6115da806200083f6000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806370a08231116100b2578063a22cb46511610081578063c87b56dd11610066578063c87b56dd14610251578063e985e9c514610264578063f2fde38b146102a057600080fd5b8063a22cb4651461022b578063b88d4fde1461023e57600080fd5b806370a08231146101e9578063715018a61461020a5780638da5cb5b1461021257806395d89b411461022357600080fd5b806323b872dd116100ee57806323b872dd1461019d57806340d097c3146101b057806342842e0e146101c35780636352211e146101d657600080fd5b806301ffc9a71461012057806306fdde0314610148578063081812fc1461015d578063095ea7b314610188575b600080fd5b61013361012e3660046111ba565b6102b3565b60405190151581526020015b60405180910390f35b610150610305565b60405161013f919061122f565b61017061016b366004611242565b610397565b6040516001600160a01b03909116815260200161013f565b61019b610196366004611277565b6103be565b005b61019b6101ab3660046112a1565b6104d8565b61019b6101be3660046112dd565b610550565b61019b6101d13660046112a1565b610581565b6101706101e4366004611242565b61059c565b6101fc6101f73660046112dd565b610601565b60405190815260200161013f565b61019b61069b565b6006546001600160a01b0316610170565b6101506106af565b61019b6102393660046112f8565b6106be565b61019b61024c36600461134a565b6106c9565b61015061025f366004611242565b610748565b610133610272366004611426565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61019b6102ae3660046112dd565b6107bc565b60006001600160e01b031982166380ac58cd60e01b14806102e457506001600160e01b03198216635b5e139f60e01b145b806102ff57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461031490611459565b80601f016020809104026020016040519081016040528092919081815260200182805461034090611459565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b5050505050905090565b60006103a282610868565b506000908152600460205260409020546001600160a01b031690565b60006103c98261059c565b9050806001600160a01b0316836001600160a01b03160361043b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061045757506104578133610272565b6104c95760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610432565b6104d383836108cc565b505050565b6104e2338261093a565b6105455760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608401610432565b6104d38383836109b9565b610558610b6d565b600061056360075490565b9050610573600780546001019055565b61057d8282610bc7565b5050565b6104d3838383604051806020016040528060008152506106c9565b6000818152600260205260408120546001600160a01b0316806102ff5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610432565b60006001600160a01b03821661067f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610432565b506001600160a01b031660009081526003602052604090205490565b6106a3610b6d565b6106ad6000610be1565b565b60606001805461031490611459565b61057d338383610c33565b6106d3338361093a565b6107365760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608401610432565b61074284848484610d01565b50505050565b606061075382610868565b600061076a60408051602081019091526000815290565b9050600081511161078a57604051806020016040528060008152506107b5565b8061079484610d7f565b6040516020016107a5929190611493565b6040516020818303038152906040525b9392505050565b6107c4610b6d565b6001600160a01b0381166108405760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610432565b61084981610be1565b50565b5490565b80546001019055565b6001600160a01b03163b151590565b6000818152600260205260409020546001600160a01b03166108495760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610432565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109018261059c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806109468361059c565b9050806001600160a01b0316846001600160a01b0316148061098d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109b15750836001600160a01b03166109a684610397565b6001600160a01b0316145b949350505050565b826001600160a01b03166109cc8261059c565b6001600160a01b031614610a485760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610432565b6001600160a01b038216610aaa5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610432565b610ab56000826108cc565b6001600160a01b0383166000908152600360205260408120805460019290610ade9084906114d8565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b0c9084906114ef565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146106ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610432565b61057d828260405180602001604052806000815250610e98565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610c945760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610432565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d0c8484846109b9565b610d1884848484610f16565b6107425760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610432565b606081600003610da65750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610dd05780610dba81611507565b9150610dc99050600a83611536565b9150610daa565b60008167ffffffffffffffff811115610deb57610deb611334565b6040519080825280601f01601f191660200182016040528015610e15576020820181803683370190505b5090505b84156109b157610e2a6001836114d8565b9150610e37600a8661154a565b610e429060306114ef565b60f81b818381518110610e5757610e5761155e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610e91600a86611536565b9450610e19565b610ea28383611062565b610eaf6000848484610f16565b6104d35760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610432565b60006001600160a01b0384163b1561105757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f5a903390899088908890600401611574565b6020604051808303816000875af1925050508015610f95575060408051601f3d908101601f19168201909252610f92918101906115b0565b60015b61103d573d808015610fc3576040519150601f19603f3d011682016040523d82523d6000602084013e610fc8565b606091505b5080516000036110355760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610432565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109b1565b506001949350505050565b6001600160a01b0382166110b85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610432565b6000818152600260205260409020546001600160a01b03161561111d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610432565b6001600160a01b03821660009081526003602052604081208054600192906111469084906114ef565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461084957600080fd5b6000602082840312156111cc57600080fd5b81356107b5816111a4565b60005b838110156111f25781810151838201526020016111da565b838111156107425750506000910152565b6000815180845261121b8160208601602086016111d7565b601f01601f19169290920160200192915050565b6020815260006107b56020830184611203565b60006020828403121561125457600080fd5b5035919050565b80356001600160a01b038116811461127257600080fd5b919050565b6000806040838503121561128a57600080fd5b6112938361125b565b946020939093013593505050565b6000806000606084860312156112b657600080fd5b6112bf8461125b565b92506112cd6020850161125b565b9150604084013590509250925092565b6000602082840312156112ef57600080fd5b6107b58261125b565b6000806040838503121561130b57600080fd5b6113148361125b565b91506020830135801515811461132957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561136057600080fd5b6113698561125b565b93506113776020860161125b565b925060408501359150606085013567ffffffffffffffff8082111561139b57600080fd5b818701915087601f8301126113af57600080fd5b8135818111156113c1576113c1611334565b604051601f8201601f19908116603f011681019083821181831017156113e9576113e9611334565b816040528281528a602084870101111561140257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561143957600080fd5b6114428361125b565b91506114506020840161125b565b90509250929050565b600181811c9082168061146d57607f821691505b60208210810361148d57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516114a58184602088016111d7565b8351908301906114b98183602088016111d7565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156114ea576114ea6114c2565b500390565b60008219821115611502576115026114c2565b500190565b600060018201611519576115196114c2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261154557611545611520565b500490565b60008261155957611559611520565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526115a66080830184611203565b9695505050505050565b6000602082840312156115c257600080fd5b81516107b5816111a456fea164736f6c634300080d000a4552433732313a207472616e7366657220746f206e6f6e204552433732315265";

type NFTest1ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: NFTest1ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class NFTest1__factory extends ContractFactory {
  constructor(...args: NFTest1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _receivers: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<NFTest1> {
    return super.deploy(_receivers, overrides || {}) as Promise<NFTest1>;
  }
  override getDeployTransaction(
    _receivers: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_receivers, overrides || {});
  }
  override attach(address: string): NFTest1 {
    return super.attach(address) as NFTest1;
  }
  override connect(signer: Signer): NFTest1__factory {
    return super.connect(signer) as NFTest1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTest1Interface {
    return new utils.Interface(_abi) as NFTest1Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFTest1 {
    return new Contract(address, _abi, signerOrProvider) as NFTest1;
  }
}
